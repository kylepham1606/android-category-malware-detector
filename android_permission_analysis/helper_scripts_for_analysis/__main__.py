import argparse
import csv
import os
import sys

from android_permission_analysis.malware_predictor.__main__ import main as malware_predictor
from android_permission_analysis.permission_analyzer.__main__ import load_existing_data


def _get_apk_paths(dir):
    list_of_files = os.listdir(dir)
    all_apks = []
    # Iterate over all the entries
    for entry in list_of_files:
        full_path = os.path.join(dir, entry)
        if os.path.isdir(full_path):
            all_apks = all_apks + _get_apk_paths(full_path)
        elif full_path.endswith(".apk"):
            all_apks.append(full_path)
        else:
            pass

    return all_apks


def main(apk_dir, category):
    permission_data = load_existing_data()
    standardized_category_name = category.lower()
    if standardized_category_name not in permission_data:
        raise ValueError("no category named {0}".format(category))

    analyzed_apps_in_category = [app for app in permission_data[standardized_category_name]]
    apks_in_dir_and_subdirs = _get_apk_paths(apk_dir)

    malicious_likelihood_scores = []
    for apk in apks_in_dir_and_subdirs:
        apk_file_name_without_dir = os.path.split(apk)[1]

        for analyzed_app in analyzed_apps_in_category:
            if apk_file_name_without_dir == analyzed_app["apk_file"]:
                if analyzed_app["virustotal_positives"] > 0:
                    scan_result = "Malware"
                else:
                    scan_result = "Benign"

                try:
                    malicious_likelihood_scores.append((
                        apk_file_name_without_dir, malware_predictor(apk, category), scan_result))
                except ValueError:
                    pass

        # Write CSV file for how often each permission is used.
        with open("malicious_likelihood_scores_{0}.csv".format(standardized_category_name), "wb") as csvfile:
            fieldnames = ["apk_file", "malicious_likelihood_score", "virus_scan_result"]
            writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

            writer.writeheader()
            for apk_file, score, scan_result in malicious_likelihood_scores:
                writer.writerow({"apk_file": str(apk_file), "malicious_likelihood_score": str(score),
                                 "virus_scan_result": scan_result})

    return 0


if __name__ == "__main__":
    arg_parser = argparse.ArgumentParser()
    arg_parser.add_argument("apk_dir", help="directory (subdirectories included) containing APK files")
    arg_parser.add_argument("category", help="app category")
    args = arg_parser.parse_args()

    sys.exit(main(args.apk_dir, args.category))
