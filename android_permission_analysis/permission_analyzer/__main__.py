import argparse
import json
import os
import sys
import time

import requests
from main.apk import APK  # from the apk-parse library

VIRUSTOTAL_API_KEY = "3c2bff8efaae1e199895b3b637ff9b93f1dcb8b2cb218eb29f3aa68cb3eb29a9"
VIRUSTOTAL_API_URL = "https://www.virustotal.com/vtapi/v2/"
PERMISSIONS_DATA_FILE = os.path.join(os.path.expanduser("~"), "eecs448_permissions_data.json")


def load_existing_data():
    if os.path.isfile(PERMISSIONS_DATA_FILE):
        with open(PERMISSIONS_DATA_FILE, "r") as file_stream:
            existing_data = json.loads(file_stream.read())
    else:
        existing_data = {}

    return existing_data


def _save_data_changes(updated_data):
    with open(PERMISSIONS_DATA_FILE, "w") as file_stream:
        file_stream.write(json.dumps(updated_data, indent=4))


def main(apk_file, category):
    permission_data = load_existing_data()

    print("starting permission analysis, apk_file={0}".format(apk_file))

    standardized_category_name = category.lower()
    if standardized_category_name not in permission_data:
        permission_data[standardized_category_name] = []

    apk_interface = APK(apk_file)
    permissions = [perm.split(".")[2] for perm in apk_interface.permissions if perm.startswith("android.permission")]  # strip out "android.permission." prefix

    virustotal_scan = requests.post(
        VIRUSTOTAL_API_URL + "file/scan",
        files={"file": (os.path.basename(apk_file), open(apk_file, "rb"))},
        params={"apikey": VIRUSTOTAL_API_KEY}
    )

    # Give VirusTotal time to scan if necessary. Also, API limits to 4 requests per minute.
    time.sleep(15)

    virustotal_report = requests.post(
        VIRUSTOTAL_API_URL + "file/report",
        params={"apikey": VIRUSTOTAL_API_KEY, "resource": virustotal_scan.json()["resource"]}
    )

    permission_data[standardized_category_name].append({
        "apk_file": os.path.split(apk_file)[1],
        "package": apk_interface.package,
        "permissions": permissions,
        "virustotal_positives": virustotal_report.json()["positives"]
    })

    _save_data_changes(permission_data)

    print("permission analysis complete, apk_file={0}, package={1}, permissions={2}, virustotal_positives={3}".format(
        apk_file, apk_interface.package, permissions, virustotal_report.json()["positives"]))

    return 0


if __name__ == "__main__":
    arg_parser = argparse.ArgumentParser()
    arg_parser.add_argument("apk_file", help="APK file path")
    arg_parser.add_argument("category", help="app category")
    args = arg_parser.parse_args()

    sys.exit(main(args.apk_file, args.category))
