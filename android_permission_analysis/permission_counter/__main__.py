import argparse
import json
import os
import sys
import time
import csv

# PERMISSIONS_DATA_FILE = os.path.join(os.path.expanduser("~"),
# "eecs448_permissions_data.malware_and_categorized_google_play_apps.json")
PERMISSIONS_DATA_FILE = "D:\\Repositories\\android-permissions-analysis\\data_backups\\" \
                        "eecs448_permissions_data.malware_and_categorized_google_play_apps.json"

def load_existing_data():
    if os.path.isfile(PERMISSIONS_DATA_FILE):
        with open(PERMISSIONS_DATA_FILE, "r") as file_stream:
            existing_data = json.loads(file_stream.read())
    else:
        existing_data = {}

    return existing_data


def main():
    permission_data = load_existing_data()
    permissions_total_count = {}
    permissions_count = {}
    apps_count = {}
    total_apps_count = 0

    for category in permission_data:
        permissions_count[category] = {}
        apps_in_category = permission_data[category]
        apps_count[category] = len(apps_in_category)
        total_apps_count += len(apps_in_category)

        for apk in apps_in_category:
            permissions = apk["permissions"]
            permissions = list(set(permissions))
            for permission in permissions:

                if permission not in permissions_count[category]:
                    permissions_count[category][permission] = 1
                else:
                    permissions_count[category][permission] += 1

                if permission not in permissions_total_count:
                    permissions_total_count[permission] = 1
                else:
                    permissions_total_count[permission] += 1

            # Write CSV file for how often each permission is used.
            with open("permissions_count_{0}.csv".format(category), "wb") as csvfile:
                fieldnames = ["permission", "count", "total_apps", "occurrence_ratio"]
                writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

                writer.writeheader()
                for permission in permissions_count[category]:
                    writer.writerow({"permission": str(permission),
                                     "count": str(permissions_count[category][permission]),
                                     "total_apps" : str(len(apps_in_category)),
                                     "occurrence_ratio": str(float(permissions_count[category][permission]) /
                                                             float(len(apps_in_category)))})

    # Write CSV file for how often each permission is used.
    with open("permissions_count_total.csv", "wb") as csvfile:
        fieldnames = ["permission", "count", "total_apps", "occurrence_ratio"]
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

        writer.writeheader()
        for permission in permissions_total_count:
            writer.writerow({"permission": str(permission),
                             "count": str(permissions_total_count[permission]),
                             "total_apps": str(total_apps_count),
                             "occurrence_ratio": str(float(permissions_total_count[permission]) /
                                                     float(total_apps_count))})

    with open("permissions_count_all.csv", "wb") as csvfile:
        print(permission_data.keys())
        fieldnames = ["Permission"] + permission_data.keys() + ["All Categories"]
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

        writer.writeheader()
        for permission in permissions_total_count:
            dictionary = {"Permission": str(permission)}

            for category in permission_data:
                if permission not in permissions_count[category]:
                    dictionary[category] = "-"
                else:
                    dictionary[category] = str(float(permissions_count[category][permission]) /
                                               float(apps_count[category]) * 100)

            dictionary["All Categories"] = str(float(permissions_total_count[permission]) /
                                               float(total_apps_count) * 100)

            writer.writerow(dictionary)

    return 0


# def main(category):
#     permission_data = load_existing_data()
#     standardized_category_name = category.lower()
#     if standardized_category_name not in permission_data:
#         raise ValueError("no category named {0}".format(category))
#
#     permissions_count = []
#     apps_in_category = permission_data[standardized_category_name]
#     for apk in apps_in_category:
#         permissions = apk["permissions"]
#         for permission in permissions:
#             permissions_count[permission] += 1
#
#     # Write CSV file for how often each permission is used.
#         with open("permissions_count_{0}.csv".format(standardized_category_name), "wb") as csvfile:
#             fieldnames = ["permission", "count", "occurrence_ratio"]
#             writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
#
#             writer.writeheader()
#             for permission in permissions_count:
#                 writer.writerow({"permission": str(permission),
#                                  "count": str(permissions_count[permission]),
#                                  "occurrence_ratio": str(float(permissions_count[permission]) /
#                                                          float(len(apps_in_category)))})
#
#     return 0


if __name__ == "__main__":
    arg_parser = argparse.ArgumentParser()
    args = arg_parser.parse_args()
    sys.exit(main())
